from sklearn.neighbors import KNeighborsRegressor

reg = KNeighborsRegressor(n_neighbors=3)
reg.fit(X_train, y_train)

prediction = reg.predict(X_test)
score = reg.score(X_test, y_test)

# plot prediction curve (for k=1,3,9)
fig, axes = plt.subplots(1, 3, figsize=(15, 4))
line = np.linspace(-3, 3, 1000).reshape(-1, 1) # create 1,000 points spaced between -3 and 3 for drawing curve
for n_neighbors, ax in zip([1, 3, 9], axes):
	reg = KNeighborsRegressor(n_neighbors=n_neighbors)
	reg.fit(X_train, y_train)
	ax.plot(line, reg.predict(line))
	ax.plot(X_train, y_train, '^', c=mglearn.cm2(0), markersize=8)
	ax.plot(X_test, y_test, 'v', c=mglearn.cm2(1), markersize=8)
	ax.set_title("{} neighbor(s)\n train score: {:.2f} test score: {:.2f}".format(
										n_neighbors, reg.score(X_train, y_train),
														reg.score(X_test, y_test)))
	ax.set_xlabel("Feature")
	ax.set_ylabel("Target")
axes[0].legend(["Model predictions", "Training data/target",
				"Test data/target"], loc="best")
plt.show()